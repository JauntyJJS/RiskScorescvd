[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vicencio DP (2023). RiskScorescvd: Package (Cardiovascular Risk Scores Calculator). R package version 0.1.0.","code":"@Manual{,   title = {RiskScorescvd: What the Package Does (Cardiovascular Risk Scores Calculator)},   author = {Daniel Perez Vicencio},   year = {2023},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"riskscorescvd","dir":"","previous_headings":"","what":"What the Package Does (Cardiovascular Risk Scores Calculator)","title":"What the Package Does (Cardiovascular Risk Scores Calculator)","text":"goal RiskScorescvd …","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (Cardiovascular Risk Scores Calculator)","text":"can install development version RiskScorescvd GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"dvicencio/RiskScorescvd\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (Cardiovascular Risk Scores Calculator)","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . also use GitHub Actions re-render README.Rmd every time push. example workflow can found : https://github.com/r-lib/actions/tree/v1/examples. can also embed plots, example:  case, don’t forget commit push resulting figure files, display GitHub CRAN.","code":"library(RiskScorescvd) #> Loading required package: tidyverse #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.2     ✔ readr     2.1.4 #> ✔ forcats   1.0.0     ✔ stringr   1.5.0 #> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0 #> ✔ purrr     1.0.1      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors #> Loading required package: PooledCohort ## basic example code summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"/reference/ASCVD.html","id":null,"dir":"Reference","previous_headings":"","what":"ASCVD (Atherosclerotic Cardiovascular Disease) Risk Algorithm including Known ASCVD from AHA/ACC — ASCVD","title":"ASCVD (Atherosclerotic Cardiovascular Disease) Risk Algorithm including Known ASCVD from AHA/ACC — ASCVD","text":"function implements ASCVD score calculation vector Scored using 3 steps Step 1: High-Risk Criteria: History ASCVD History ASCVD - History acute coronary syndrome (ACS), myocardial infarction (MI), stable angina, coronary/arterial revascularization, stroke, transient ischemic attack, Peripheral Arterial Disease (PAD) atherosclerosis Step 2: High-Risk Criteria: Extreme LDL LDL Cholesterol ≥190mg/dL (4.92 mmol/L) Step 3: ASCVD Risk Criteria; Apply LDL 70-189mg/dL (1.81-4.90 mmol/L) Age Diabetes Total cholesterol HDL cholesterol Systolic BP Treatment Hypertension Smoker Race Balck british Black; everything else White Three possible outcome High-Intensity Statin Therapy Moderate-Intensity Statin Therapy Low-Intensity Statin Therapy","code":""},{"path":"/reference/ASCVD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ASCVD (Atherosclerotic Cardiovascular Disease) Risk Algorithm including Known ASCVD from AHA/ACC — ASCVD","text":"","code":"ASCVD(   Gender,   Ethnicity,   Age,   total.chol,   total.hdl,   systolic.bp,   hypertension,   smoker,   diabetes,   classify )"},{"path":"/reference/ASCVD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ASCVD (Atherosclerotic Cardiovascular Disease) Risk Algorithm including Known ASCVD from AHA/ACC — ASCVD","text":"Gender binary character vector sex values. Categories include 'male' 'female'. Age numeric vector age values, years total.chol numeric vector total cholesterol values, mmol/L total.hdl numeric vector total high density lipoprotein HDL values, mmol/L systolic.bp numeric vector systolic blood pressure continuous values hypertension binary numeric vector, 1 = yes 0 = smoker binary numeric vector, 1 = yes 0 = diabetes binary numeric vector, 1 = yes 0 = race character vector, 'white', 'black', 'asian', ","code":""},{"path":"/reference/ASCVD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ASCVD (Atherosclerotic Cardiovascular Disease) Risk Algorithm including Known ASCVD from AHA/ACC — ASCVD","text":"vector ASCVD score calculations /vector classifications indicated","code":""},{"path":"/reference/ASCVD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ASCVD (Atherosclerotic Cardiovascular Disease) Risk Algorithm including Known ASCVD from AHA/ACC — ASCVD","text":"","code":"results <- cohort_xx %>% rowwise() %>% mutate(ASCVD_score = ASCVD(Gender, Ethnicity, Age, total.chol, total.hdl, systolic.bp,hypertension, smoker, diabetes, classify = FALSE)) #> Error in eval(expr, envir, enclos): object 'cohort_xx' not found"},{"path":"/reference/ASCVD_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"ASCVD risk score function\nASCVD = Atherosclerotic Cardiovascular Disease — ASCVD_scores","title":"ASCVD risk score function\nASCVD = Atherosclerotic Cardiovascular Disease — ASCVD_scores","text":"function allows calculate ASCVD score row wise data frame required variables. retrieve data frame two extra columns including calculations classifications","code":""},{"path":"/reference/ASCVD_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ASCVD risk score function\nASCVD = Atherosclerotic Cardiovascular Disease — ASCVD_scores","text":"","code":"ASCVD_scores(data, classify)"},{"path":"/reference/ASCVD_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ASCVD risk score function\nASCVD = Atherosclerotic Cardiovascular Disease — ASCVD_scores","text":"data data frame variables needed calculation: Gender, Ethnicity, Age, total.chol, total.hd, systolic.bp,hypertension, smoker, diabetes classify set TRUE wish add column scores' categories","code":""},{"path":"/reference/ASCVD_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ASCVD risk score function\nASCVD = Atherosclerotic Cardiovascular Disease — ASCVD_scores","text":"data frame two extra columns including ASCVD score calculations classifications","code":""},{"path":"/reference/ASCVD_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ASCVD risk score function\nASCVD = Atherosclerotic Cardiovascular Disease — ASCVD_scores","text":"","code":"# Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100 # Create a larger dataset with 100 rows cohort_xx <- data.frame(   typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(30:80, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family_history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE),   sweating = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),  pain.radiation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),  pleuritic = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),  palpation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),  ecg.twi = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),  Δ2nd_hstni = as.numeric(sample(1:200, num_rows, replace = TRUE)),  killip.class = as.numeric(sample(1:4, num_rows, replace = TRUE)),  systolic.bp = as.numeric(sample(0:300, num_rows, replace = TRUE)),  heart.rate = as.numeric(sample(0:300, num_rows, replace = TRUE)),  creat = as.numeric(sample(0:4, num_rows, replace = TRUE)),  cardiac.arrest = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),  previous.pci = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),  previous.cabg = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),  aspirin = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),  number.of.episodes.24h = as.numeric(sample(0:20, num_rows, replace = TRUE)),  total.chol = as.numeric(sample(5:100, num_rows, replace = TRUE)),  total.hdl = as.numeric(sample(2:5, num_rows, replace = TRUE)),  Ethnicity = sample(c(\"white\", \"black\", \"asian\", \"other\"), num_rows, replace = TRUE) ) # Call the function with the cohort_xx result <- ASCVD_scores(data = cohort_xx, classify = TRUE) # Print the results summary(result$ASCVD_score) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  0.0000  0.0750  0.3700  0.4606  0.8750  1.0000  summary(result$ASCVD_strat) #> Very low risk      Low risk Moderate risk     High risk  #>            20             5            11            64"},{"path":"/reference/EDACS.html","id":null,"dir":"Reference","previous_headings":"","what":"Emergency Department Assessment of Chest Pain Score (EDACS) — EDACS","title":"Emergency Department Assessment of Chest Pain Score (EDACS) — EDACS","text":"function implements EDACS score calculation vector Needed variables ------------------------------------------------------- Age -  18-45 = 2 46-50 = 4 51-55 = 6     available 56-60 = 8 61-65 = 10 66-70 = 12 71-75 = 14 76-80 = 16 81-85 = 18 ≥86 = 20 Sex - Female = 0    available Male = 6 Known coronary artery disease ≥3 risk factors*  risk factors apply patients 18-50- = 0                     available yes = 4 Symptoms signs Diaphoresis                                        = 0   yes = 3 Pain radiates arm, shoulder, neck, jaw       = 0  yes = 5 Pain occurred worsened inspiration    NA   = 0  yes = -4 Pain reproduced palpation               NA   = 0  yes = -6 Possible outcomes ------------------------------------------------------- Two possible outcomes Low risk cohort: EDACS <16 EKG shows new ischemia 0-hr 2-hr troponin negative. low risk cohort: EDACS ≥16 EKG shows new ischemia 0-hr 2-hr troponin positive.","code":""},{"path":"/reference/EDACS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emergency Department Assessment of Chest Pain Score (EDACS) — EDACS","text":"","code":"EDACS(   Age,   Gender,   diabetes,   smoker,   hypertension,   hyperlipidaemia,   family.history,   sweating,   pain.radiation,   pleuritic,   palpation,   ecg.st.depression,   ecg.twi,   presentation_hstni,   Δ2nd_hstni,   classify )"},{"path":"/reference/EDACS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Emergency Department Assessment of Chest Pain Score (EDACS) — EDACS","text":"Age numeric vector age values, years Gender binary character vector sex values. Categories include 'male' 'female'. diabetes binary numeric vector, 1 = yes 0 = smoker binary numeric vector, 1 = yes 0 = hypertension binary numeric vector, 1 = yes 0 = hyperlipidaemia binary numeric vector, 1 = yes 0 = family.history binary numeric vector, 1 = yes 0 = sweating binary numeric vector, 1 = yes 0 = pain.radiation binary numeric vector, 1 = yes 0 = pleuritic binary numeric vector, 1 = yes 0 = palpation binary numeric vector, 1 = yes 0 = ecg.st.depression binary numeric vector, 1 = yes 0 = ecg.twi binary numeric vector, 1 = yes 0 = presentation_hstni continuous numeric vector troponin levels typical_symptoms.num numeric vector number typical symptoms ecg.normal binary numeric vector,  1 = yes 0 = abn.repolarisation binary numeric vector,  1 = yes 0 = atherosclerotic.disease binary numeric vector, 1 = yes 0 = 2nd_hstni binary numeric vector, 1 = yes 0 = ","code":""},{"path":"/reference/EDACS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Emergency Department Assessment of Chest Pain Score (EDACS) — EDACS","text":"vector EDACS score calculations /vector classifications indicated","code":""},{"path":"/reference/EDACS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Emergency Department Assessment of Chest Pain Score (EDACS) — EDACS","text":"","code":"results <- cohort_xx %>% rowwise() %>% mutate(EDACS_score = EDACS(Age, Gender, diabetes, smoker, hypertension, hyperlipidaemia, family.history, sweating, pain.radiation, pleuritic, palpation, ecg.st.depression, ecg.twi,  presentation_hstni, Δ2nd_hstni, classify = FALSE)) #> Error in eval(expr, envir, enclos): object 'cohort_xx' not found"},{"path":"/reference/EDACS_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"EDACS score function\nEDACS = Emergency Department Assessment of Chest Pain Score — EDACS_scores","title":"EDACS score function\nEDACS = Emergency Department Assessment of Chest Pain Score — EDACS_scores","text":"function allows calculate EDACS score row wise data frame required variables. retrieve data frame two extra columns including calculations classifications","code":""},{"path":"/reference/EDACS_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EDACS score function\nEDACS = Emergency Department Assessment of Chest Pain Score — EDACS_scores","text":"","code":"EDACS_scores(data, classify)"},{"path":"/reference/EDACS_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EDACS score function\nEDACS = Emergency Department Assessment of Chest Pain Score — EDACS_scores","text":"data data frame variables needed calculation: Age, Gender, diabetes, smoker, hypertension, hyperlipidaemia, family.history, sweating, pain.radiation, pleuritic, palpation, ecg.st.depression, ecg.twi,  presentation_hstni, Δ2nd_hstni, classify","code":""},{"path":"/reference/EDACS_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EDACS score function\nEDACS = Emergency Department Assessment of Chest Pain Score — EDACS_scores","text":"data frame two extra columns including 'EDACS_score' calculations classifications, 'EDACS_strat'","code":""},{"path":[]},{"path":"/reference/GRACE.html","id":null,"dir":"Reference","previous_headings":"","what":"GRACE Global Registry of Acute Coronary Events version 2.0, 6 months outcome — GRACE","title":"GRACE Global Registry of Acute Coronary Events version 2.0, 6 months outcome — GRACE","text":"function implements GRACE 2.0 6 months outcome score calculation vector Needed variables -------------------------------------------------------- Age = Heart Rate = H Systolic BP = S Creatine = C killip.class class (signs/symptoms) = K CHF = 1 Rales /JVD = 2 Pulmonary edema = 3 Cardiogenic shock = 4 Cardiac Arrest = X = 0  yes = 1 ST segment deviation EKG? = E = 0  yes = 1 Abnormal cardiac enzymes = T = 0  yes = 1 Add variables equation solve p xb= -7.7035 + (0.0531*) + (0.0087*H) - (0.0168*S) + (0.1823*C) + (0.6931* K) + (1.4586*Xt) + (0.4700*E) + (0.8755*T); p=(exp(xb))/(1 + exp(xb)); Possible outcomes percentage Probability death admission 6 months given footnote: * = Available, NA = notavailable. Another formula found https://www.outcomes-umassmed.org/grace/files/GRACE_RiskModel_Coefficients.pdf https://www.outcomes-umassmed.org/grace/grace_risk_table.aspx https://www.outcomes-umassmed.org/grace/acs_risk2/index.html •\tLow \t\t\t       1-88 •\tIntermediate \t\t89-118 •\tHigh \t\t\t     119-263","code":""},{"path":"/reference/GRACE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GRACE Global Registry of Acute Coronary Events version 2.0, 6 months outcome — GRACE","text":"","code":"GRACE(   killip.class,   systolic.bp,   heart.rate,   Age,   creat,   ecg.st.depression,   presentation_hstni,   cardiac.arrest,   Gender,   classify )"},{"path":"/reference/GRACE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GRACE Global Registry of Acute Coronary Events version 2.0, 6 months outcome — GRACE","text":"killip.class numeric vector killip class values, 1 4 systolic.bp numeric vector systolic blood pressure continuous values heart.rate numeric vector heart rate continuous values Age numeric vector age values, years ecg.st.depression binary numeric vector, 1 = yes 0 = presentation_hstni continuous numeric vector troponin levels Gender binary character vector sex values. Categories include 'male' 'female'.","code":""},{"path":"/reference/GRACE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GRACE Global Registry of Acute Coronary Events version 2.0, 6 months outcome — GRACE","text":"vector GRACE score calculations /vector classifications indicated","code":""},{"path":[]},{"path":"/reference/GRACE_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"GRACE Global Registry of Acute Coronary Events version 2.0, 6 months outcome — GRACE_scores","title":"GRACE Global Registry of Acute Coronary Events version 2.0, 6 months outcome — GRACE_scores","text":"function allows calculate GRACE 2.0 score row wise data frame required variables. retrieve data frame two extra columns including calculations classifications","code":""},{"path":"/reference/GRACE_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GRACE Global Registry of Acute Coronary Events version 2.0, 6 months outcome — GRACE_scores","text":"","code":"GRACE_scores(data, classify)"},{"path":"/reference/GRACE_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GRACE Global Registry of Acute Coronary Events version 2.0, 6 months outcome — GRACE_scores","text":"data data frame variables needed calculation: killip.class, systolic.bp, heart.rate, Age, creat, ecg.st.depression, presentation_hstni, cardiac.arrest, Gender, classify","code":""},{"path":"/reference/GRACE_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GRACE Global Registry of Acute Coronary Events version 2.0, 6 months outcome — GRACE_scores","text":"data frame two extra columns including 'GRACE_score' calculations classifications, 'GRACE_strat'","code":""},{"path":[]},{"path":"/reference/HEART.html","id":null,"dir":"Reference","previous_headings":"","what":"History, ECG, Age, Risk factors and Troponin (HEART) risk score — HEART","title":"History, ECG, Age, Risk factors and Troponin (HEART) risk score — HEART","text":"function implements HEART score calculation vector History - Absence history coronary ischemia: nonspecific  = 0 Nonspecific + suspicious elements: moderately suspicious = 1 Mainly suspicious elements (middle- left-sided, / heavy chest pain, radiation, / /relief symptoms sublingual nitrates):  = 2 EGG - Normal ECG according Minnesota criteria (criteria?)  = 0 Repolarization abnormalities without / significant ST-segment depression elevation                   = 1 Presence bundle branch block pacemaker rhythm, / typical abnormalities indicative left ventricular hypertrophy, / repolarization abnormalities probably caused digoxin use, / case unchanged known repolarization disturbances.            = 1 Significant ST-segment depressions / elevations absence bundle branch block, / left ventricular hypertrophy, use digoxin       =  2 Age - Younger 45 = 0 45 65 years old = 1 65 years older = 2 Risk facrtor - Currently treated diabetes mellitus, / current recent (<90 days) smoker, / diagnosed /treated hypertension, / diagnosed hypercholesterolemia, / family history coronary artery disease, obesity (body mass index [BMI] >30), history significant atherosclerosis, / (coronary revascularization, myocardial infarction, stroke, / peripheral arterial disease, / irrespective risk factors coronary artery disease) None = 0 One two = 1 Three = 2 Troponin T - threshold positivity = 0                    1 3 times threshold positivity = 1    higher 3 times threshold positivity   = 2    Two possible outcomes: 0-3 = Low risk 4-6 = Moderate risk 7 = High risk HEART score: guide application emergency department paper reference Website: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6005932/","code":""},{"path":"/reference/HEART.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"History, ECG, Age, Risk factors and Troponin (HEART) risk score — HEART","text":"","code":"HEART(   typical_symptoms.num,   ecg.normal,   abn.repolarisation,   ecg.st.depression,   Age,   diabetes,   smoker,   hypertension,   hyperlipidaemia,   family.history,   atherosclerotic.disease,   presentation_hstni,   Gender,   classify = classify )"},{"path":"/reference/HEART.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"History, ECG, Age, Risk factors and Troponin (HEART) risk score — HEART","text":"typical_symptoms.num numeric vector number typical symptoms ecg.normal binary numeric vector,  1 = yes 0 = abn.repolarisation binary numeric vector,  1 = yes 0 = ecg.st.depression binary numeric vector, 1 = yes 0 = Age numeric vector age values, years diabetes binary numeric vector, 1 = yes 0 = smoker binary numeric vector, 1 = yes 0 = hypertension binary numeric vector, 1 = yes 0 = hyperlipidaemia binary numeric vector, 1 = yes 0 = family.history binary numeric vector, 1 = yes 0 = atherosclerotic.disease binary numeric vector, 1 = yes 0 = presentation_hstni continuous numeric vector troponin levels Gender binary character vector sex values. Categories include 'male' 'female'.","code":""},{"path":"/reference/HEART.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"History, ECG, Age, Risk factors and Troponin (HEART) risk score — HEART","text":"vector HEART score calculations /vector classifications indicated","code":""},{"path":[]},{"path":"/reference/HEART_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"HEART risk score function\nHEART = History, ECG, Age, Risk factors, Troponin — HEART_scores","title":"HEART risk score function\nHEART = History, ECG, Age, Risk factors, Troponin — HEART_scores","text":"function allows calculate HEART score row wise data frame required variables. retrieve data frame two extra columns including calculations classifications","code":""},{"path":"/reference/HEART_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HEART risk score function\nHEART = History, ECG, Age, Risk factors, Troponin — HEART_scores","text":"","code":"HEART_scores(data, classify)"},{"path":"/reference/HEART_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HEART risk score function\nHEART = History, ECG, Age, Risk factors, Troponin — HEART_scores","text":"data data frame variables needed calculation: typical_symptoms.num, ecg.normal, abn.repolarisation, ecg.st.depression,Age, diabetes, smoker, hypertension, hyperlipidaemia, family.history, atherosclerotic.disease, presentation_hstni, Gender","code":""},{"path":"/reference/HEART_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HEART risk score function\nHEART = History, ECG, Age, Risk factors, Troponin — HEART_scores","text":"data frame two extra columns including HEART score calculations classifications","code":""},{"path":"/reference/HEART_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HEART risk score function\nHEART = History, ECG, Age, Risk factors, Troponin — HEART_scores","text":"","code":"# Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100 # Create a larger dataset with 100 rows cohort_xx <- data.frame(   typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(30:80, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family_history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE) ) # Call the function with the cohort_xx result <- HEART_scores(data = cohort_xx, classify = TRUE) #> Error in mutate(., HEART_score = HEART(typical_symptoms.num, ecg.normal,     abn.repolarisation, ecg.st.depression, Age, diabetes, smoker,     hypertension, hyperlipidaemia, family.history, atherosclerotic.disease,     presentation_hstni, Gender, classify = FALSE), HEART_strat = HEART(typical_symptoms.num,     ecg.normal, abn.repolarisation, ecg.st.depression, Age, diabetes,     smoker, hypertension, hyperlipidaemia, family.history, atherosclerotic.disease,     presentation_hstni, Gender, classify = classify) %>% as.factor() %>%     ordered(levels = c(\"Low risk\", \"Moderate risk\", \"High risk\"))): ℹ In argument: `HEART_score = HEART(...)`. #> ℹ In row 1. #> Caused by error: #> ! object 'family.history' not found # Print the results summary(result$HEART_score) #> Error in eval(expr, envir, enclos): object 'result' not found summary(result$HEART_strat) #> Error in eval(expr, envir, enclos): object 'result' not found"},{"path":"/reference/RiskScoresCalc.html","id":null,"dir":"Reference","previous_headings":"","what":"Commonly used cardiovascular risk scores for the prediction of major cardiac events (MACE) — RiskScoresCalc","title":"Commonly used cardiovascular risk scores for the prediction of major cardiac events (MACE) — RiskScoresCalc","text":"function implements seven cardiovascular risk scores row wise data frame required variables. retrieve data frame two extra columns risk score including calculations classifications","code":""},{"path":"/reference/RiskScoresCalc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Commonly used cardiovascular risk scores for the prediction of major cardiac events (MACE) — RiskScoresCalc","text":"","code":"calc_scores(   data,   typical_symptoms.num_df = \"typical_symptoms.num\",   ecg.normal_df = \"ecg.normal\",   abn.repolarisation_df = \"abn.repolarisation\",   ecg.st.depression_df = \"ecg.st.depression\",   Age_df = \"Age\",   diabetes_df = \"diabetes\",   smoker_df = \"smoker\",   hypertension_df = \"hypertension\",   hyperlipidaemia_df = \"hyperlipidaemia\",   family.history_df = \"family.history\",   atherosclerotic.disease_df = \"atherosclerotic.disease\",   presentation_hstni_df = \"presentation_hstni\",   Gender_df = \"Gender\",   sweating_df = \"sweating\",   pain.radiation_df = \"pain.radiation\",   pleuritic_df = \"pleuritic\",   palpation_df = \"palpation\",   ecg.twi_df = \"ecg.twi\",   Δ2nd_hstni_df = \"Δ2nd_hstni\",   killip.class_df = \"killip.class\",   heart.rate_df = \"heart.rate\",   systolic.bp_df = \"systolic.bp\",   aspirin_df = \"aspirin\",   number.of.episodes.24h_df = \"number.of.episodes.24h\",   previous.pci_df = \"previous.pci\",   previous.cabg_df = \"previous.cabg\",   total.chol_df = \"total.chol\",   total.hdl_df = \"total.hdl\",   Ethnicity_df = \"Ethnicity\" )"},{"path":"/reference/RiskScoresCalc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Commonly used cardiovascular risk scores for the prediction of major cardiac events (MACE) — RiskScoresCalc","text":"typical_symptoms.num numeric vector number typical symptoms ecg.normal binary numeric vector,  1 = yes 0 = abn.repolarisation binary numeric vector,  1 = yes 0 = ecg.st.depression binary numeric vector, 1 = yes 0 = Age numeric vector age values, years diabetes binary numeric vector, 1 = yes 0 = smoker binary numeric vector, 1 = yes 0 = hypertension binary numeric vector, 1 = yes 0 = hyperlipidaemia binary numeric vector, 1 = yes 0 = family.history binary numeric vector, 1 = yes 0 = atherosclerotic.disease binary numeric vector, 1 = yes 0 = presentation_hstni continuous numeric vector troponin levels Gender binary character vector sex values. Categories include 'male' 'female'. sweating binary numeric vector, 1 = yes 0 = pain.radiation binary numeric vector, 1 = yes 0 = pleuritic binary numeric vector, 1 = yes 0 = palpation binary numeric vector, 1 = yes 0 = ecg.twi binary numeric vector, 1 = yes 0 = 2nd_hstni binary numeric vector, 1 = yes 0 = killip.class numeric vector killip class values, 1 4 heart.rate numeric vector heart rate continuous values systolic.bp numeric vector systolic blood pressure continuous values aspirin binary numeric vector, 1 = yes 0 = number..episodes.24h numeric vector number angina episodes 24 hours previous.pci binary numeric vector, 1 = yes 0 = previous.cabg binary numeric vector, 1 = yes 0 = total.chol numeric vector total cholesterol values, mmol/L total.hdl numeric vector total high density lipoprotein HDL values, mmol/L","code":""},{"path":"/reference/RiskScoresCalc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Commonly used cardiovascular risk scores for the prediction of major cardiac events (MACE) — RiskScoresCalc","text":"data frame two extra columns including cardiovascular risk score calculations classifications","code":""},{"path":"/reference/RiskScoresCalc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Commonly used cardiovascular risk scores for the prediction of major cardiac events (MACE) — RiskScoresCalc","text":"","code":"new_data_frame <- calc_scores(data = cohort_xx) #> Error in eval(expr, envir, enclos): object 'cohort_xx' not found"},{"path":"/reference/SCORE2-slash-OP.html","id":null,"dir":"Reference","previous_headings":"","what":"Systematic COronary Risk Evaluation (SCORE) model — SCORE2/OP","title":"Systematic COronary Risk Evaluation (SCORE) model — SCORE2/OP","text":"function implements ASCVD score calculation vector formula SCORE2 Updated Supplementary Material page  9. paper: \"SCORE2 risk prediction algorithms: new models estimate 10-year risk cardiovascular disease Europe\" Age\t10-year risk fatal non-fatal cardiovascular disease               Low risk    Moderate risk     High risk < 50 years   \t  <2.5 50 - 69 years\t  <5  ≥ 70 years\t    <7.5 classifications referred https://www.inanutshell.ch/en/digital-doctors-bag/score2--score2-op/#:~:text=SCORE2","code":""},{"path":"/reference/SCORE2-slash-OP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Systematic COronary Risk Evaluation (SCORE) model — SCORE2/OP","text":"","code":"SCORE2(   Age,   Gender,   smoker,   systolic.bp,   diabetes,   total.chol,   total.hdl,   classify )"},{"path":"/reference/SCORE2-slash-OP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Systematic COronary Risk Evaluation (SCORE) model — SCORE2/OP","text":"Age numeric vector age values, years Gender binary character vector Gender values. Categories include 'male' 'female'. smoker binary numeric vector, 1 = yes 0 = systolic.bp numeric vector systolic blood pressure continuous values total.chol numeric vector total cholesterol values, mmol/L total.total.hdl numeric vector total high density lipoprotein total.hdl values, mmol/L","code":""},{"path":"/reference/SCORE2-slash-OP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Systematic COronary Risk Evaluation (SCORE) model — SCORE2/OP","text":"vector SCORE2/OP score calculations /vector classifications indicated","code":""},{"path":"/reference/SCORE2-slash-OP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Systematic COronary Risk Evaluation (SCORE) model — SCORE2/OP","text":"","code":"results <- cohort_xx %>% rowwise() %>% mutate(SCORE2OP_score = SCORE2(Age, Gender, smoker, systolic.bp, diabetes, total.chol, total.hdl, classify = FALSE)) #> Error in eval(expr, envir, enclos): object 'cohort_xx' not found"},{"path":"/reference/SCORE2_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"SCORE2/OP risk score function\nSCORE2/OP = Systematic COronary Risk Evaluation /and Older Population — SCORE2_scores","title":"SCORE2/OP risk score function\nSCORE2/OP = Systematic COronary Risk Evaluation /and Older Population — SCORE2_scores","text":"function allows calculate SCORE2 OP score row wise data frame required variables. retrieve data frame two extra columns including calculations classifications","code":""},{"path":"/reference/SCORE2_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SCORE2/OP risk score function\nSCORE2/OP = Systematic COronary Risk Evaluation /and Older Population — SCORE2_scores","text":"","code":"SCORE2_scores(data, classify)"},{"path":"/reference/SCORE2_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SCORE2/OP risk score function\nSCORE2/OP = Systematic COronary Risk Evaluation /and Older Population — SCORE2_scores","text":"data data frame variables needed calculation:  Age, Gender, smoker, systolic.bp, diabetes, total.chol, total.hdl classify set TRUE wish add column scores' categories","code":""},{"path":"/reference/SCORE2_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SCORE2/OP risk score function\nSCORE2/OP = Systematic COronary Risk Evaluation /and Older Population — SCORE2_scores","text":"data frame two extra columns including SCORE2/OP score calculations classifications","code":""},{"path":[]},{"path":"/reference/TIMI.html","id":null,"dir":"Reference","previous_headings":"","what":"Thrombolysis In Myocardial Infarction (TIMI) Risk Score for UA/NSTEMI — TIMI","title":"Thrombolysis In Myocardial Infarction (TIMI) Risk Score for UA/NSTEMI — TIMI","text":"function implements TIMI score calculation vector Age <65 = 0 65 - 74 = 2 >= 75 = 3 Risk factors >3* yes = 1,  = 0 Known CAD (stenosis ≥50 yes = 1,  = 0 Aspirin Use yes = 1,  = 0 Severe angina yes = 1,  = 0 ECG ST Elevation LBBB yes = 1,  = 0 Positive cardiac marker yes = 1,  = 0 Four possible outcomes 0 = low risk 1-2 = Low risk 3-4 = Moderate risk =>5 = High risk function allows calculate HEART score row wise data frame required variables. retrieve data frame two extra columns including calculations classifications","code":""},{"path":"/reference/TIMI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thrombolysis In Myocardial Infarction (TIMI) Risk Score for UA/NSTEMI — TIMI","text":"","code":"TIMI(   Age,   hypertension,   hyperlipidaemia,   family.history,   diabetes,   smoker,   previous.pci,   previous.cabg,   aspirin,   number.of.episodes.24h,   ecg.st.depression,   presentation_hstni,   Gender,   classify )  TIMI_scores(data, classify)"},{"path":"/reference/TIMI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thrombolysis In Myocardial Infarction (TIMI) Risk Score for UA/NSTEMI — TIMI","text":"Age numeric vector age values, years hypertension binary numeric vector, 1 = yes 0 = hyperlipidaemia binary numeric vector, 1 = yes 0 = family.history binary numeric vector, 1 = yes 0 = diabetes binary numeric vector, 1 = yes 0 = smoker binary numeric vector, 1 = yes 0 = previous.pci binary numeric vector, 1 = yes 0 = previous.cabg binary numeric vector, 1 = yes 0 = aspirin binary numeric vector, 1 = yes 0 = number..episodes.24h numeric vector number angina episodes 24 hours ecg.st.depression binary numeric vector, 1 = yes 0 = presentation_hstni continuous numeric vector troponin levels Gender binary character vector sex values. Categories include 'male' 'female'. data data frame variables needed calculation: typical_symptoms.num, ecg.normal, abn.repolarisation, ecg.st.depression,Age, diabetes, smoker, hypertension, hyperlipidaemia, family.history, atherosclerotic.disease, presentation_hstni, Gender","code":""},{"path":"/reference/TIMI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Thrombolysis In Myocardial Infarction (TIMI) Risk Score for UA/NSTEMI — TIMI","text":"vector TIMI score calculations /vector classifications indicated data frame two extra columns including HEART score calculations classifications","code":""},{"path":"/reference/TIMI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Thrombolysis In Myocardial Infarction (TIMI) Risk Score for UA/NSTEMI — TIMI","text":"TIMI = Thrombolysis Myocardial Infarction","code":""},{"path":"/reference/TIMI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Thrombolysis In Myocardial Infarction (TIMI) Risk Score for UA/NSTEMI — TIMI","text":"","code":"results <- cohort_xx %>% rowwise() %>% mutate(TIMI_score = TIMI(Age, hypertension, hyperlipidaemia, family.history, diabetes, smoker, previous.pci, previous.cabg, aspirin, number.of.episodes.24h, ecg.st.depression, presentation_hstni, Gender, classify = FALSE)) #> Error in eval(expr, envir, enclos): object 'cohort_xx' not found   # Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100 # Create a larger dataset with 100 rows cohort_xx <- data.frame(   typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(30:80, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family_history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE) ) # Call the function with the cohort_xx result <- HEART_scores(data = cohort_xx, classify = TRUE) #> Error in mutate(., HEART_score = HEART(typical_symptoms.num, ecg.normal,     abn.repolarisation, ecg.st.depression, Age, diabetes, smoker,     hypertension, hyperlipidaemia, family.history, atherosclerotic.disease,     presentation_hstni, Gender, classify = FALSE), HEART_strat = HEART(typical_symptoms.num,     ecg.normal, abn.repolarisation, ecg.st.depression, Age, diabetes,     smoker, hypertension, hyperlipidaemia, family.history, atherosclerotic.disease,     presentation_hstni, Gender, classify = classify) %>% as.factor() %>%     ordered(levels = c(\"Low risk\", \"Moderate risk\", \"High risk\"))): ℹ In argument: `HEART_score = HEART(...)`. #> ℹ In row 1. #> Caused by error: #> ! object 'family.history' not found # Print the results summary(result$HEART_score) #> Error in eval(expr, envir, enclos): object 'result' not found summary(result$HEART_strat) #> Error in eval(expr, envir, enclos): object 'result' not found"},{"path":"/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""}]
